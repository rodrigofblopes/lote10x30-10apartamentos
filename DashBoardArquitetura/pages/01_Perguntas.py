import streamlit as st
import os
from openai import OpenAI

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Perguntas - Vila Andriw",
    page_icon="‚ùì",
    layout="wide"
)

# Estilo CSS personalizado
st.markdown("""
<style>
    .chat-message {
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
        display: flex;
        align-items: flex-start;
        gap: 0.5rem;
    }
    .chat-message.user {
        background-color: #f0f9ff;
        border-left: 4px solid #3b82f6;
    }
    .chat-message.assistant {
        background-color: #f0fdf4;
        border-left: 4px solid #10b981;
    }
    .chat-message .avatar {
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }
    .chat-message .content {
        flex: 1;
    }
    .chat-message .content p {
        margin: 0;
    }
</style>
""", unsafe_allow_html=True)

# T√≠tulo e descri√ß√£o
st.markdown("""
<div style="text-align: center; padding: 2rem 0;">
    <h1>‚ùì Perguntas sobre o Projeto</h1>
    <p style="font-size: 1.2rem; opacity: 0.8;">
        Tire suas d√∫vidas sobre o projeto Vila Andriw usando IA
    </p>
</div>
""", unsafe_allow_html=True)

# Inicializar o cliente OpenAI
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# Inicializar hist√≥rico de chat na sess√£o
if "messages" not in st.session_state:
    st.session_state.messages = []

# Fun√ß√£o para gerar resposta
def generate_response(prompt):
    try:
        # Contexto do projeto
        system_prompt = """Voc√™ √© um assistente especializado no projeto Vila Andriw, um projeto de constru√ß√£o civil com as seguintes caracter√≠sticas:

        - Projeto: Vila Andriw
        - Tipo: Residencial
        - √Årea: ~40m¬≤
        - Pavimentos: 3 (Funda√ß√£o, T√©rreo, Superior)
        - Custo Total: R$ 126.544,18
        - Material: R$ 93.845,16 (74.2%)
        - M√£o de Obra: R$ 32.699,02 (25.8%)
        
        Especifica√ß√µes T√©cnicas:
        - Concreto: C25/C30 MPa
        - A√ßo: CA-50
        - Funda√ß√£o: Sapatas corridas
        - Lajes: Nervuradas e maci√ßas
        - Altura total: 4.5m
        - P√©-direito: 2.7m
        
        Responda √†s perguntas de forma t√©cnica mas compreens√≠vel, usando os dados acima quando relevante."""

        messages = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]

        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages,
            temperature=0.7,
            max_tokens=500
        )

        return response.choices[0].message.content

    except Exception as e:
        return f"Erro ao gerar resposta: {str(e)}"

# Interface do chat
st.markdown("### üí¨ Chat")

# Exibir mensagens anteriores
for message in st.session_state.messages:
    with st.container():
        st.markdown(f"""
        <div class="chat-message {message['role']}">
            <div class="avatar">{' üë§ ' if message['role'] == 'user' else ' ü§ñ '}</div>
            <div class="content">
                <p>{message['content']}</p>
            </div>
        </div>
        """, unsafe_allow_html=True)

# Input do usu√°rio
user_input = st.text_input("Digite sua pergunta sobre o projeto:", key="user_input")

# Bot√£o de envio
if st.button("Enviar Pergunta"):
    if user_input:
        # Adicionar pergunta do usu√°rio ao hist√≥rico
        st.session_state.messages.append({"role": "user", "content": user_input})
        
        # Gerar e adicionar resposta ao hist√≥rico
        response = generate_response(user_input)
        st.session_state.messages.append({"role": "assistant", "content": response})
        
        # Limpar input
        st.session_state.user_input = ""
        
        # Recarregar p√°gina para mostrar nova mensagem
        st.rerun()

# Bot√£o para limpar hist√≥rico
if st.button("Limpar Hist√≥rico"):
    st.session_state.messages = []
    st.rerun()

# Informa√ß√µes adicionais
with st.expander("‚ÑπÔ∏è Sobre o Assistente"):
    st.markdown("""
    Este assistente usa IA para responder perguntas sobre o projeto Vila Andriw. Ele pode ajudar com:
    
    - üìä Informa√ß√µes sobre custos e or√ßamento
    - üèóÔ∏è Detalhes t√©cnicos da constru√ß√£o
    - üìê Especifica√ß√µes de materiais e dimens√µes
    - üí∞ An√°lise financeira do projeto
    
    As respostas s√£o baseadas nos dados reais do projeto.
    """)

# Dicas de uso
with st.expander("üí° Exemplos de Perguntas"):
    st.markdown("""
    - Qual √© o custo total do projeto?
    - Como √© feita a funda√ß√£o do projeto?
    - Qual √© a especifica√ß√£o do concreto usado?
    - Quanto custa o material em rela√ß√£o √† m√£o de obra?
    - Quais s√£o as dimens√µes do projeto?
    """)
